#!/usr/bin/env bash

set -e

vmName="<%= name %>" # BOSH VM name
vmIndex="<%= index %>" # index within cluster
vmFullName="${vmName}/${vmIndex}" # full job name

jobName="appfirst"
jobPath="/var/vcap/jobs/${jobName}"
pkgPath="/var/vcap/packages/${jobName}"
runPath="/var/vcap/sys/run/${jobName}"
logPath="/var/vcap/sys/log/${jobName}"
tmpPath="/var/vcap/sys/tmp/${jobName}"
storePath="/var/vcap/store/${jobName}"
binPath="${jobPath}/bin"
etcPath="${jobPath}/etc"
dataPath="${jobPath}/data"
configPath="${jobPath}/config"
pluginsPath="${jobPath}/plugins"
# NOTE: It is important for libPath to be outside BOSH dir on system so that 
# it does not break any processes when bosh nukes or changes the job directory
# Until BOSH allows for a 'job uninstall/cleanup' hook we need this outside.
libPath="${jobPath}/lib"
sharePath="/opt/appfirst/lib"
pidFile="${runPath}/${jobName}.pid"
LD_LIBRARY_PATH=${libPath}

LANG=en_US.UTF-8
HOME="${HOME:-"/home/vcap"}"
serverTags=(
bosh
<% if_p('appfirst.server_tags') do |server_tags| %>
<%= server_tags.join("\n") %>
<% end %>
<% spec.job.templates.select{|t| t.name != "appfirst" }.each do |template| %>
<%= template.name %>
<% end %>
)
logFiles=(
"/var/vcap/data/sys/log/*/*.log"
"/var/vcap/sys/log/*/*.log"
"/var/vcap/sys/log/*.log"
)
# AppFirst Specific items...
binName="afcollector"
arch=$(uname -m)
# Detect Architecture and configure accordingly
case "${arch}" in
  ("x86_64") lib="lib64"; libproto="x86_64"; ;;
  ("amd64")  lib="lib64"; libproto="x86_64"; ;;
  ("i386")   lib="lib32"; libproto="i386";   ;;
  ("i686")   lib="lib32"; libproto="i386";   ;;
esac

if command -v dpkg >/dev/null 2>&1
then srcPath="${pkgPath}/deb/${arch}"
elif command -v rpm >/dev/null 2>&1
then srcPath="${pkgPath}/rpm/${arch}"
else srcPath="${pkgPath}/linux/${arch}"
fi

# Add all packages' /bin & /sbin into $PATH
for pkg_bin_path in $(ls -d /var/vcap/packages/*/*bin)
do PATH="${pkg_bin_path}:${PATH}"
done

# JMX collector will only be enabled if the property is set explicitely to 'true' in the manifest.
enableJMX=<%= p('appfirst.jmx_collector_enabled') %>
if [[ ${enableJMX:-"false"} == "true" ]]
then JMXCOLLECTOR=${pluginsPath}/libexec/jmx-collector/jmxcollector
else unset JMXCOLLECTOR
fi

export vmName vmIndex vmFullName jobName jobPath serverTags logFiles \
  runPath logPath tmpPath storePath configPath sharePath binPath \
  dataPath etcPath pidFile PATH LANG HOME LD_LIBRARY_PATH JMXCOLLECTOR

paths=(
"${jobPath}" "${runPath}" "${logPath}" "${tmpPath}" "${storePath}" 
"${sharePath}" "${dataPath}" "${etcPath}" "${pluginsPath}" "${libPath}"
)

# Ensure all paths exist, are owned by vcap:vcap and are executable
for _path in "${paths[@]}"
do
  if ! [[ -d ${_path} ]]
  then
    mkdir -p "${_path}" 
    chown vcap:vcap "${_path}" 
    chmod 0775 "${_path}"
  fi
done

# Redirect Output to log files.
exec 1>> "${logPath}/${jobName}.log"
exec 2>> "${logPath}/${jobName}.err.log"

echo -e "$(date +'%Y-%m-%dT%H:%M:%S')\$> $0 $*"

if [[ ! -s ${configPath}/AppFirst.init ]]
then # Write AppFirst Initialization File
  {
    echo -e "---\nnickname: ${vmFullName}\nserver_tags:"
    for serverTag in ${serverTags[@]} ; do echo "  - ${serverTag}" ; done
    echo -e "logs:\n  file:"
    for logFile in "${logFiles[@]}" ; do echo "    - ${logFile}" ; done
  } >  ${configPath}/AppFirst.init
fi
